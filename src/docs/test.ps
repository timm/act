%!PS-Adobe-3.0
%%Title: lua.ssh, test.lua
%%For: TIm Menzies
%%Creator: a2ps version 4.14
%%CreationDate: Wed Sep 29 22:31:02 2021
%%BoundingBox: 24 24 571 818
%%DocumentData: Clean7Bit
%%Orientation: Landscape
%%Pages: 2
%%PageOrder: Ascend
%%DocumentMedia: A4 595 842 0 () ()
%%DocumentNeededResources: font Courier
%%+ font Courier-Bold
%%+ font Courier-BoldOblique
%%+ font Courier-Oblique
%%+ font Helvetica
%%+ font Helvetica-Bold
%%+ font Symbol
%%+ font Times-Bold
%%+ font Times-Roman
%%DocumentProcessColors: Black 
%%DocumentSuppliedResources: procset a2ps-a2ps-hdr
%%+ procset a2ps-black+white-Prolog
%%+ encoding ISO-8859-1Encoding
%%EndComments
/a2psdict 200 dict def
a2psdict begin
%%BeginProlog
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Check PostScript language level.
/languagelevel where {
  pop /gs_languagelevel languagelevel def
} {
  /gs_languagelevel 1 def
} ifelse

% EPSF import as in the Red Book
/BeginInclude {
  /b4_Inc_state save def    		% Save state for cleanup
  /dict_count countdictstack def	% Count objects on dict stack
  /op_count count 1 sub def		% Count objects on operand stack 
  userdict begin
    0 setgray 0 setlinecap
    1 setlinewidth 0 setlinejoin
    10 setmiterlimit [ ] 0 setdash newpath
    gs_languagelevel 1 ne {
      false setstrokeadjust false setoverprint 
    } if
} bind def

/EndInclude {
  count op_count sub { pos } repeat	% Clean up stacks
  countdictstack dict_count sub { end } repeat
  b4_Inc_state restore
} bind def

/BeginEPSF {
  BeginInclude
  /showpage { } def
} bind def

/EndEPSF {
  EndInclude
} bind def

% Page prefeed
/page_prefeed {         % bool -> -
  statusdict /prefeed known {
    statusdict exch /prefeed exch put
  } {
    pop
  } ifelse
} bind def

/deffont {
  findfont exch scalefont def
} bind def

/reencode_font {
  findfont reencode 2 copy definefont pop def
} bind def

% Function c-show (str => -)
% centers text only according to x axis.
/c-show { 
  dup stringwidth pop
  2 div neg 0 rmoveto
  show
} bind def

% Function l-show (str => -)
% prints texts so that it ends at currentpoint
/l-show {
  dup stringwidth pop neg 
  0 
  rmoveto show
} bind def

% center-fit show (str w => -)
% show centered, and scale currentfont so that the width is less than w
/cfshow {
  exch dup stringwidth pop
  % If the title is too big, try to make it smaller
  3 2 roll 2 copy
  gt
  { % if, i.e. too big
    exch div
    currentfont exch scalefont setfont
  } { % ifelse
    pop pop 
  }
  ifelse
  c-show			% center title
} bind def

% Return the y size of the current font
% - => fontsize
/currentfontsize {
  currentfont /FontMatrix get 3 get 1000 mul
} bind def

% reencode the font
% <encoding-vector> <fontdict> -> <newfontdict>
/reencode { %def
  dup length 5 add dict begin
    { %forall
      % <vector> <key> <val>
      1 index /FID ne 
      { def }{ pop pop } ifelse
    } forall
    /Encoding exch def % -

    % Use the font's bounding box to determine the ascent, descent,
    % and overall height; don't forget that these values have to be
    % transformed using the font's matrix.
    % We use `load' because sometimes BBox is executable, sometimes not.
    % Since we need 4 numbers an not an array avoid BBox from being executed
    /FontBBox load aload pop
    FontMatrix transform /Ascent exch def pop
    FontMatrix transform /Descent exch def pop
    /FontHeight Ascent Descent sub def

    % Get the underline position and thickness if they're defined.
    % Use 1 if they are not defined.
    currentdict /FontInfo 2 copy known
    { get
      /UnderlinePosition 2 copy % <FontInfo> /UP <FontInfo> /UP
      2 copy known
      { get }{ pop pop 1 } ifelse
      0 exch FontMatrix transform exch pop
      def % <FontInfo>

      /UnderlineThickness 2 copy % <FontInfo> /UT <FontInfo> /UT
      2 copy known
      { get }{ pop pop 1 } ifelse
      0 exch FontMatrix transform exch pop
      def % <FontInfo>
      pop % -
    }{ pop pop
    } ifelse

    currentdict
  end 
} bind def

% Function print line number (<string> # -)
/# {
  gsave
    sx cw mul neg 2 div 0 rmoveto
    f# setfont
    c-show
  grestore
} bind def

% -------- Some routines to enlight plain b/w printings ---------

% Underline
% width --
/dounderline {
  currentpoint
  gsave
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    0 rlineto
    stroke
  grestore
} bind def

% Underline a string
% string --
/dounderlinestring {
  stringwidth pop
  dounderline
} bind def

/UL {
  /ul exch store
} bind def

% Draw a box of WIDTH wrt current font
% width --
/dobox {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    stroke
  grestore
} bind def

/BX {
  /bx exch store
} bind def

% Box a string
% string --
/doboxstring {
  stringwidth pop
  dobox
} bind def

%
% ------------- Color routines ---------------
%
/FG /setrgbcolor load def

% Draw the background
% width --
/dobackground {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    bgcolor aload pop setrgbcolor
    fill
  grestore
} bind def

% Draw bg for a string
% string --
/dobackgroundstring {
  stringwidth pop
  dobackground
} bind def


/BG {
  dup /bg exch store
  { mark 4 1 roll ] /bgcolor exch store } if
} bind def


/Show {
  bg { dup dobackgroundstring } if
  ul { dup dounderlinestring } if
  bx { dup doboxstring } if
  show
} bind def

% Function T(ab), jumps to the n-th tabulation in the current line
/T {
  cw mul x0 add
  bg { dup currentpoint pop sub dobackground } if
  ul { dup currentpoint pop sub dounderline } if
  bx { dup currentpoint pop sub dobox } if
  y0 moveto
} bind def

% Function n: move to the next line
/n {
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

/S {
  Show
} bind def

%%BeginResource: procset a2ps-a2ps-hdr 2.0 2
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
% Function title: prints page header.
% <ct> <rt> <lt> are passed as argument
/title { 
  % 1. Draw the background
  x v get y v get moveto
  gsave
    0 th 2 div neg rmoveto 
    th setlinewidth
    0.95 setgray
    pw 0 rlineto stroke
  grestore
  % 2. Border it
  gsave
    0.7 setlinewidth
    pw 0 rlineto
    0 th neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
  % stk: ct rt lt
  x v get y v get th sub 1 add moveto
%%IncludeResource: font Helvetica
  fHelvetica fnfs 0.8 mul scalefont setfont
  % 3. The left title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    fnfs 0.8 mul hm rmoveto
    show			% left title
  grestore
  exch
  % stk: ct ltw rt
  % 4. the right title
  gsave
    dup stringwidth pop fnfs 0.8 mul add exch % leave space took on stack
    dup
    pw exch stringwidth pop fnfs 0.8 mul add sub
    hm
    rmoveto
    show			% right title
  grestore
  % stk: ct ltw rtw
  % 5. the center title
  gsave
    pw 3 1 roll
    % stk: ct pw ltw rtw
    3 copy 
    % Move to the center of the left room
    sub add 2 div hm rmoveto
    % What is the available space in here?
    add sub fnfs 0.8 mul sub fnfs 0.8 mul sub
    % stk: ct space_left
%%IncludeResource: font Helvetica-Bold
  fHelvetica-Bold fnfs scalefont setfont
    cfshow
  grestore
} bind def

% Function border: prints virtual page border
/border { %def
  gsave				% print four sides
    0 setgray
    x v get y v get moveto
    0.7 setlinewidth		% of the square
    pw 0 rlineto
    0 ph neg rlineto
    pw neg 0 rlineto
    closepath stroke
  grestore
} bind def

% Function water: prints a water mark in background
/water { %def
  gsave
    scx scy moveto rotate
%%IncludeResource: font Times-Bold
  fTimes-Bold 100 scalefont setfont
    .97 setgray
    dup stringwidth pop 2 div neg -50 rmoveto
    show
  grestore
} bind def

% Function rhead: prints the right header
/rhead {  %def
  lx ly moveto
  fHelvetica fnfs 0.8 mul scalefont setfont
  l-show
} bind def

% Function footer (cf rf lf -> -)
/footer {
  fHelvetica fnfs 0.8 mul scalefont setfont
  dx dy moveto
  show

  snx sny moveto
  l-show
  
  fnx fny moveto
  c-show
} bind def
%%EndResource
%%BeginResource: procset a2ps-black+white-Prolog 2.0 1

% Function T(ab), jumps to the n-th tabulation in the current line
/T { 
  cw mul x0 add y0 moveto
} bind def

% Function n: move to the next line
/n { %def
  /y0 y0 bfs sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 bfs sub store
  x0 y0 moveto
}  bind def

/S {
  Show
} bind def

/p {
  false UL
  false BX
  fCourier bfs scalefont setfont
  Show
} bind def

/sy {
  false UL
  false BX
  fSymbol bfs scalefont setfont
  Show
} bind def

/k {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/K {
  false UL
  false BX
  fCourier-Bold bfs scalefont setfont
  Show
} bind def

/c {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/C {
  false UL
  false BX
  fCourier-BoldOblique bfs scalefont setfont
  Show 
} bind def

/l {
  false UL
  false BX
  fHelvetica bfs scalefont setfont
  Show
} bind def

/L {
  false UL
  false BX
  fHelvetica-Bold bfs scalefont setfont
  Show 
} bind def

/str{
  false UL
  false BX
  fTimes-Roman bfs scalefont setfont
  Show
} bind def

/e{
  false UL
  true BX
  fHelvetica-Bold bfs scalefont setfont
  Show
} bind def

%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeResource: font Courier
%%IncludeResource: font Courier-Oblique
%%IncludeResource: font Courier-Bold
%%IncludeResource: font Times-Roman
%%IncludeResource: font Symbol
%%IncludeResource: font Courier-BoldOblique
%%BeginResource: encoding ISO-8859-1Encoding
/ISO-8859-1Encoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright 
/parenleft /parenright /asterisk /plus /comma /minus /period /slash 
/zero /one /two /three /four /five /six /seven 
/eight /nine /colon /semicolon /less /equal /greater /question 
/at /A /B /C /D /E /F /G 
/H /I /J /K /L /M /N /O 
/P /Q /R /S /T /U /V /W 
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore 
/quoteleft /a /b /c /d /e /f /g 
/h /i /j /k /l /m /n /o 
/p /q /r /s /t /u /v /w 
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section 
/dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen /registered /macron 
/degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph /bullet 
/cedilla /onesuperior /ordmasculine /guillemotright /onequarter /onehalf /threequarters /questiondown 
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla 
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis 
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply 
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls 
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla 
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis 
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide 
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis 
] def
%%EndResource
% Initialize page description variables.
/sh 595 def
/sw 842 def
/llx 24 def
/urx 818 def
/ury 571 def
/lly 24 def
/#copies 1 def
/th 15.000000 def
/fnfs 11 def
/bfs 8.005733 def
/cw 4.803440 def

% Dictionary for ISO-8859-1 support
/iso1dict 8 dict begin
  /fCourier ISO-8859-1Encoding /Courier reencode_font
  /fCourier-Bold ISO-8859-1Encoding /Courier-Bold reencode_font
  /fCourier-BoldOblique ISO-8859-1Encoding /Courier-BoldOblique reencode_font
  /fCourier-Oblique ISO-8859-1Encoding /Courier-Oblique reencode_font
  /fHelvetica ISO-8859-1Encoding /Helvetica reencode_font
  /fHelvetica-Bold ISO-8859-1Encoding /Helvetica-Bold reencode_font
  /fTimes-Bold ISO-8859-1Encoding /Times-Bold reencode_font
  /fTimes-Roman ISO-8859-1Encoding /Times-Roman reencode_font
currentdict end def
/bgcolor [ 0 0 0 ] def
/bg false def
/ul false def
/bx false def
% The font for line numbering
/f# /Helvetica findfont bfs .6 mul scalefont def
/fSymbol /Symbol findfont def
/hm fnfs 0.25 mul def
/pw
   cw 81.400000 mul
def
/ph
   501.959430 th add
def
/pmw urx llx sub pw 2 mul sub 1 div def
/pmh 0 def
/v 0 def
/x [
  0
  dup pmw add pw add
] def
/y [
  pmh ph add 0 mul ph add
  dup
] def
/scx sw 2 div def
/scy sh 2 div def
/snx urx def
/sny lly 2 add def
/dx llx def
/dy sny def
/fnx scx def
/fny dy def
/lx snx def
/ly ury fnfs 0.8 mul sub def
/sx 0 def
/tab 8 def
/x0 0 def
/y0 0 def
%%EndSetup

%%Page: (1) 1
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(# Lua.ssh --- Sheet definitions for Lua source code) c n
(# Copyright \(c\) 2014 Kenji Rikitake) N
(# Copyright \(c\) 1999 Edward Arthur, Akim Demaille, Miguel Santana) N
(#) N
() p n
(#) c n
(# This file is NOT a part of a2ps.) N
(#) N
(# This program is free software; you can redistribute it and/or modify) N
(# it under the terms of the GNU General Public License as published by) N
(# the Free Software Foundation; either version 2, or \(at your option\)) N
(# any later version.) N
(#) N
(# This program is distributed in the hope that it will be useful,) N
(# but WITHOUT ANY WARRANTY; without even the implied warranty of) N
(# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the) N
(# GNU General Public License for more details.) N
(#) N
(# You should have received a copy of the GNU General Public License) N
(# along with this program; see the file COPYING.  If not, write to) N
(# the Free Software Foundation, 59 Temple Place - Suite 330,) N
(# Boston, MA 02111-1307, USA.) N
() p n
(## This style is derived from Edward Arthur's AWK Style Sheet) c n
() p n
(style ) K
(Lua) l
( is) K n
() p n
(written) K
( ) p
(by) K
( "Kenji Rikitake <kenji.rikitake@acm.org>") p n
(version) K
( ) p
(is) K
( 0.1) p n
(requires) K
( ) p
(a2ps) K
( ) p
(version) K
( 4.9.7) p n
() N
(documentation) K
( ) p
(is) K n
(    "This style file is intended to support the Lua programming language source ) p n
(code.") N
(end) K
( ) p
(documentation) K n
() p n
(alphabets) K
( ) p
(are) K n
(   "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz_0") p n
(case) K
( ) p
(sensitive) K n
() p n
(keywords) K
( ) p
(in) K
( ) p
(Keyword) K
( ) p
(are) K n
(    and, false, ipairs, nil, not, or, pairs, rawequal, rawget, ) p n
(    rawlen, rawset, select, tonumber, tostring, true, type) N
(end) K
( ) p
(keywords) K n
() p n
(keywords) K
( ) p
(in) K
( ) p
(Keyword_strong) K
( ) p
(are) K n
(    assert, break, collectgarbage, do, dofile, else, elseif, "end", ) p n
(    error, for, function, getmetatable, goto, if, "in", local, ) N
(    load, loadfile, next, pcall, print, repeat, require, return, ) N
(    setmetatable, then, until, while, xpcall, _G, _VERSION) N
(end) K
( ) p
(keywords) K n
() p n
(sequences) K
( ) p
(are) K n
(    "--[[" ) p
(Comment) K
( "]]",) p n
(    "--" ) S
(Comment) K
(,) p n
(    ) S
(C-string) K n
(end) S
( ) p
(sequences) K n
(end) S
( ) p
(style) K n
(lua.ssh) (Page 1/1) (Sep 29, 21 22:25) title
border
grestore
(Printed by TIm Menzies) rhead
(lua.ssh) (1/2) (Wednesday September 29, 2021) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (1-2) 2
%%BeginPageSetup
/pagesave save def
sh 0 translate 90 rotate
%%EndPageSetup
iso1dict begin
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(-- **showr\(t:tbl\) :str**     ) p n
(-- Return table as string.) N
(function show\(t,     u,mt,pre\)) N
(  if   #t>0) N
(  then u={}; for _,v in pairs\(t\) do u[1+#u]=tostring\(v\) end) N
(  else ks={}; for k,_ in pairs\(t\) do if k:sub\(1,1\)~="_" then ks[1+#ks]=k end end) N
(       table.sort\(ks\)) N
(       u={}; for _,k in pairs\(ks\) do u[1+#u]= k.."="..tostring\(t[k]\) end end) N
(  pre = \(getmetatable\(t\) or {}\)._name or "") N
(  return pre.. "\("..table.concat\(u,", "\).."\)" end) N
() N
(-- ## OO Stuff) N
() N
(-- **klass\(name:str\):tbl**   ) N
(-- Create a constructor `klass\(\)` \(and store a print `name`\).) N
(function klass\(name,   k\) ) N
(  k={}; k._name=name) N
(  return setmetatable\(k,{__call=function\(k,...\) return k:new\(...\) end}\) end) N
(-- **isa\(klass:tbl, ?new:tbl, ?also:tbl\):tbl**    ) N
(-- Delegate calls to `new` to `klass`. If `also` exists, add those slots.) N
(function isa\(self,    new,also, super\)) N
(  new, also = new or {}, also or {}) N
(  super = getmetatable\(new\)) N
(  if super then setmetatable\(self, super\) end) N
(  self.__index, self.__tostring = self,show) N
(  for k,v in pairs\(also\) do new[k]=v end) N
(  return setmetatable\(new, self\) end) N
() N
(-- ## obj\(\)) N
() N
(-- Base class.) N
(local obj=klass"obj") N
(function obj:new\(\) return isa\(obj\) end) N
() N
(-- **some:new\(?max=256\):some**   ) N
(-- Reservoir sampler \(of upper size of `max`\).) N
(-- If we fill up, delete anything at random.) N
(-- If we ask for `all` those values, then ensure them come back sorted.) N
(local some=klass"some") N
(function some:new\(max\) ) N
(  return isa\(self,obj:new\(\),{max=max or 256,bad=false,has={}}\) end) N
(function some:add\(x\)) N
(  r = math.random) N
(  if #self.has < self.max then pos = 1+#self.has ) N
(  elseif r\(\) < self.max/self.n then pos = 1+\(r\(\)*#self.has\)//1 end ) N
(  if pos then self.bad=true; self.has[pos]=x end end) N
(function some:all\(\)  ) N
(  if self.bad then table.sort\(self.has\) end; self.bad=false; return self.has end) N
() N
(-- ## col\(\):col) N
() N
(-- Abstract class for columns. Allows one or more items to be added via `add` or) N
( `adds`.) N
(local col=klass"col") N
(function col:new\(c,s\) ) N
(  s = s or "" ) N
(  return isa\(self, obj:new\(\),{at=c or 1, name=s, n=0,) N
(                              w=s:find"+" and 1 or \(s:find"-" and -1 or 0\)}\) end) N
( ) N
(function col:adds\(t\) ) N
(  for _,x in pairs\(t\) do self:add\(x\) end; return self end) N
(function col:add\(x\) ) N
(test.lua) (Page 1/2) (Sep 29, 21 22:15) title
border
/v 1 store
/x0 x v get 3.362408 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
(  if x~="?" then self.n=1+self.n; self:add1\(x\) end; return self end) p n
() N
(-- ## num\(?n:int, ?s:str\):num) N
() N
(-- Counter for numbers at column `n`, named `s`.    ) N
(-- **:add\(x\)** updates the symbol counts.   ) N
(-- **:mid\(\)** returns central tendency.     ) N
(-- **:var\(\)** returns standard deviation.) N
(local num=klass"num") N
(function num:new\(n,s\) ) N
(  return isa\(self, col:new\(n,s\),) N
(             {some=some:new\(\), mu=0,m2=0,sd=0,lo=1E32,hi=-1E32}\) end) N
(function num:mid\(\) ) N
(  return self.mu end) N
(function num:var\(\) ) N
(  return self.sd end) N
(function num:add1\(x,    d\)) N
(  self.some:add\(x\)) N
(  d       = x - self.mu) N
(  self.mu = self.mu + d/self.n) N
(  self.m2 = self.m2 + d*\(x - self.mu\)) N
(  self.sd = \(self.m2<0 or self.n<2\) and 0 or \(self.m2/\(self.n-1\)\)^0.5) N
(  if x < self.lo then self.lo = x end) N
(  if x > self.hi then self.hi = x end end) N
() N
(-- ## sym\(?n:int, ?s:str\):sym) N
() N
(-- Counter for symbols at column `n`, named `s`.   ) N
(-- **:add\(x\)** updates the symbol counts.   ) N
(-- **:mid\(\)** returns central tendency.     ) N
(-- **:var\(\)** returns entropy.) N
(local sym=klass"sym") N
(function sym:new\(n,s\) ) N
(  return isa\(self,col:new\(n,s\),{most=0,mode=nil,has={}}\) end ) N
(function sym:mid\(\) ) N
(  return self.mode end) N
(function sym:var\(  e\) ) N
(  e=0; for _,v in pairs\(self.has\) do e=e - v/self.n * math.log\(v/self.n,2\) end) N
(  return e end) N
(function sym:add1\(x,    d\)) N
(  self.has[x] = 1 + \(self.has[x] or 0\)) N
(  if self.has[x] > self. most then self.most,self.mode=self.has[x], x end end) N
() N
(-- ---------------------------------------) N
(s=sym\(\):adds{"a","a","a","b","b"}) N
(c=num\(1,"asdas-"\):adds{22,32,41,100,1}) N
(print\(c\)) N
(print\(s\)) N
(print\(show{200,10,10000}\)) N
(test.lua) (Page 2/2) (Sep 29, 21 22:15) title
border
grestore
(Printed by TIm Menzies) rhead
(../test.lua) (2/2) (Wednesday September 29, 2021) footer
end % of iso1dict
pagesave restore
showpage

%%Trailer
end
%%EOF
